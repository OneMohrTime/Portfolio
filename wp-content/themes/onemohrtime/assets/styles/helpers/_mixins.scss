/*
* === MIXINS ===
*/

//@mixin aspect-ratio($width, $height) {
//	position: relative;
//	&::before {
//		display: block;
//		content: "";
//		width: 100%;
//		padding-top: ($height / $width) * 100%;
//	}
//}

@mixin type() {
	color: inherit;
	font-size: inherit;
	font-family: inherit;
	font-weight: 400;
	line-height: 1.7em;
	widows: 3;
	orphans: 3;
    hyphens: auto;
}

@mixin inline() {
	position: relative;
	color: inherit;
	line-height: 1.7em;
	z-index: 1;
	@include media(">=screen1170") {
		&:hover,
		&:focus { 
			color: inherit;
			&::before {
				width: auto;
				animation: dancemonkey 2s infinite;
			}
			.fa {
				transform: translateX($small-spacing);
			}
		}
	}
	&::before {
		content: "";
		bottom: 4px;
		position: absolute;
		width: 100%;
		height: 10px;
		background-color: $color__yellow;
		z-index: -1;
	}
	
	.fa {
		position: relative;
		transition: 500ms cubic-bezier(.455,.03,.515,.955);
	}
}

@mixin underline-link() {
	border-bottom: 3px $color__black solid;
	font-weight: 700;
	letter-spacing: 1px;
	padding-left: $small-spacing;
	padding-right: $small-spacing;
	padding-bottom: .25em;
}

@mixin texture-grid() {
	background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="3" height="3" viewBox="0 0 9 9" fill="#171409"><circle cx="2" cy="2" r="2" style="opacity:0.15" /></svg>') repeat;
}

@mixin image-overlay() {
	@supports (background-blend-mode: multiply) {
		z-index: 0;
		&::before {
			content: "";
			@include position(absolute, 0 null null 0);
			display: block;
			background: transparent url("../images/img-texture.png") repeat center center;
			background-blend-mode: multiply;
			@include size(100%);
			overflow: hidden;
			z-index: 1;
		}
	}
}

@mixin mask-texture() {
	-webkit-mask-image: url("../images/rough-texture.png");
			mask-image: url("../images/rough-texture.png");
}

@mixin btn-contact() {
	@include position(absolute, 50% $base-spacing null null);
	transform: rotate(-90deg) !important;
	transform-origin: center top 0;
	z-index: 2;
}

@mixin fade-two() {
	& > * {
		transition: opacity $speed, transform $speed;
		& > *:nth-child(2n+2) { transition-delay: 100ms; }
	}
}

@mixin btn-color($buttoncolor: $color__black, $hover: $color__yellow) {
    border: 3px $buttoncolor solid;
	color: $buttoncolor;
    &::after {
        background-color: $hover;
    }
}

@mixin text-shadow() {
	text-shadow: 2px 2px 4px fade-out($color__black, .95);
}

@mixin box-shadow() {
	box-shadow: 0 1px 3px fade-out($color__black, 0.88), 0 1px 2px fade-out($color__black, 0.76);
}

@mixin underlined() {
	position: relative;
	padding-bottom: calc(.5em + 10px);
	margin-bottom: .5em;
	&::after {
		content: "";
		@include position(absolute, null null 0 0);
		height: 10px;
		width: 50px;
		@include media(">=screen600") { width: 100px; }
		background-color: $color__yellow;
	}
}

@mixin block-link($border: null) {
	@include position(absolute, 0 0 0 0);
	display: block;
	background: none;
	@if $border == "has-border" {
		top: 10px;
		left: 10px;
		right: 10px;
		bottom: 10px;
		border: 10px transparent solid;
		transition: border $speed;
		&:hover,
		&:focus {
			border-color: fade-out($color__yellow, 0.15);
		}
	} @else {
		
	}
}

/*
* — Type Styles —
*/

@mixin title($color: $color__black) {
	color: $color;
	@include underlined();
	@include media(">=screen960") {
		font-size: 4em;
		line-height: 1em;
	}
	@include media(">=screen1280") {
		font-size: 6em;
		line-height: .8em;
	}
}

@mixin clipped-title() {
	-webkit-text-fill-color: transparent;
	-webkit-text-stroke-width: 1px;
	-webkit-text-stroke-color: $color__black;
	@supports (background-clip: text) or (-webkit-background-clip: text) {
		&::after {
			content: attr(data-title);
			position: absolute;
			top: 2px;
			left: 3px;
			background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="3" height="3" viewBox="0 0 9 9" fill="#171409"><circle cx="2" cy="2" r="2" style="opacity:1" /></svg>') repeat;
			-webkit-background-clip: text;
					background-clip: text;
			color: transparent;
			-webkit-text-stroke-width: 0;
		}
		@include media(">=screen1440") {
			-webkit-text-stroke-width: 2px;
			&::after {
				top: 4px;
				left: 6px;
			}
		}
	}
}