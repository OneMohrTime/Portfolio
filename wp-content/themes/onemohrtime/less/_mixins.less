// Rem output with px fallback
.font-size(@font-size) {
	font-size: (@font-size * 10) * 1px;
	font-size: @font-size * 1rem;
}

// Center block
.center-block() {
	display: block;
	margin: 0 auto;
}

// Clearfix
.clearfix {
    clear: both;
    &::before,
    &::after {
        content: "";
        display: table;
    }
    &::after {clear: both;}
}

// Clear after (not all clearfix need this also)
.clearfix-after() {clear: both;}

// BEGIN CUSTOM STYLES

.unstyled() {
    color: inherit !important;
    padding: 0 !important;
    border: 0 !important;
    background: none !important;
}

.text-shadow() {
    text-shadow: 1px 1px 1px fade(@color__black,50%);
}

.box-shadow() {
    box-shadow: 0 1px 1px 0 fade(@color__black,10%);
}

.aspect-ratio(@width, @height) {
    position: relative;
    &:before {
        display: block;
        content: "";
        width: 100%;
        padding-top: (@height/@width) * 100%;
    }
}

.btn-color(@buttoncolor: @color__black, @hover: @color__yellow) {
    border: 2px @buttoncolor solid;
	color: @buttoncolor;
    &::after {
        background-color: @hover;
    }
}

.pseudo-border(@zindex: -1) {
    position: relative;
    z-index: 1;
    &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border: 3px @color__yellow solid;
        opacity: 1;
        z-index: @zindex;
        transform: translate3d(-10px,10px,0);
        transition: transform 300ms, opacity 300ms;
    }
    &:hover::before {
        opacity: 0;
        transform: translate3d(0,0,0);
    }
}

// --------------------------------------------------
// Useful CSS3 LESS Mixins
// https://css-tricks.com/snippets/css/useful-css3-less-mixins/
// --------------------------------------------------

.gradient (@startColor: fade(@color__black, 50%), @endColor: fade(@color__black, 75%)) {
	background-color: @startColor;
	background: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
	background: -webkit-linear-gradient(top, @startColor, @endColor);
	background: -moz-linear-gradient(top, @startColor, @endColor);
	background: -ms-linear-gradient(top, @startColor, @endColor);
	background: -o-linear-gradient(top, @startColor, @endColor);
}

.scale (@ratio) {
	-webkit-transform: scale(@ratio);
        -ms-transform: scale(@ratio);
            transform: scale(@ratio);
}

.scale3d (@x:1, @y:1, @z:1) {
  -webkit-transform: scale3d(@x,@y,@z);
      -ms-transform: scale3d(@x,@y,@z);
          transform: scale3d(@x,@y,@z);
}

.rotate (@deg) {
    -webkit-transform: rotate(@deg);
        -ms-transform: rotate(@deg);
            transform: rotate(@deg);
}

.translate3d (@x:0, @y:0, @z:0) {
    -webkit-transform: translate3d(@x,@y,@z);
        -ms-transform: translate3d(@x,@y,@z);
            transform: translate3d(@x,@y,@z);
}

.transition(@transition) {
    -webkit-transition: @transition;
            transition: @transition;
}